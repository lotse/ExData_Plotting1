swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
library(swirl)
swirl()
head(pollution)
View(pollution)
dim(pollution$pm25)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col='blue')
abline(h=12)
hist(ppm)
hist(ppm, col='green')
rug(ppm)
rug(low)
low
hight
high
hist(ppm, col='green', breaks = 100)
rug(ppm)
hist(ppm, col='green')
abline(v=12,lwd=2)
abline(v=median(ppm),col='magenta',lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col='wheat',main='Number of Counties in Each Region')
boxplot(pm25~region, data=pollution,col='red')
par(mfrow=c(2,1),mar=c(4,4,2,1))
subset(pollution[])
east <- subset(pollution,region=="east")
head(east)
hist(east$pm25, col='grean')
hist(east$pm25, col='green')
hist(subset(pollution,region=="west")$pm25, col='green')
plot()
plot(pollution)
with(pollution, plot(latitude, pm25))
abline(y=12,lwd=2,lty=3)
abline(y=12,lwd=2,lty=2)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude, pollution$pm25,col=pollution$region)
Type plot(pollution$latitude, ppm, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west<-subset(pollution,region='west')
west<-subset(pollution,region=='west')
plot(west$latitude, west$pm25)
plot(west$latitude, west$pm25, main='West')
plot(east$latitude, east$pm25, main='East')
5
head(pollution)
head(pollution)
dim(pollution)
dim(pollution)
summary(pollution$pm25)
summary(pollution$pm25)
quantile(ppm)
quantile(ppm)
boxplot(ppm,col="blue")
boxplot(ppm,col="blue")
abline(h = 12)
abline(h = 12)
hist(ppm, col = "green")
hist(ppm, col = "green")
rug(ppm)
rug(ppm)
low
high
high
hist(ppm, col = "green", breaks = 100)
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green", breaks = 100)
hist(ppm, col = "green")
2
abline(v = 12, lwd=2)
1
abline(v = median(ppm), col = "magenta", lwd = 4)
v
4
names(pollution)
2
reg <- table(pollution$region)
reg
2
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
2
boxplot(pm25 ~ region, data = pollution, col = "red")
52
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
3
east <- subset(pollution,region=="east")
head(east)
6
hist(east$pm25, col = "green")
d
3
hist(subset(pollution,region=="west")$pm25, col = "green")
3
with(pollution, plot(latitude, pm25))
2
abline(h = 12, lwd = 2, lty = 2)
2
plot(pollution$latitude, ppm, col = pollution$region)
2
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
2
west <- subset(pollution,region=="west")
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "east")
plot(east$latitude, east$pm25, main = "East")
setwd("D:/github/data_clean")
doc <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
library(XML)
fileUrl <- "restaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
zipcodes <- xpathSApply(rootNode,"//zipcode",xmlValue)
zipcodes==21231
sum(zipcodes==21231)
microdata <- read.csv("getdata-data-ss06hid.csv",sep = ',',header = TRUE)
table(microdata$VAL)
View(microdata)
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",sheetIndex=1, rowIndex = c(18:23), colIndex = c(7:15), header=TRUE)
library(xlsx)
dat <- read.xlsx("getdata-data-DATA.gov_NGAP.xlsx",sheetIndex=1, rowIndex = c(18:23), colIndex = c(7:15), header=TRUE)
sum(dat$Zip*dat$Ext,na.rm=T)
PowerConsData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headernames <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(PowerConsData) <- unlist(headernames)
par(mfrow=c(1,1))
hist(PowerConsData$Global_active_power, xlab="Global Active Power (kilowatts)", main = "Global Active Power", col="red")
dev.copy(png, file="plot1.png")
dev.off()
PowerConsData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
setwd("D:/github/ExData_Plotting1")
setwd("D:/github/ExData_Plotting1")
PowerConsData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headernames <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(PowerConsData) <- unlist(headernames)
par(mfrow=c(1,1))
hist(PowerConsData$Global_active_power, xlab="Global Active Power (kilowatts)", main = "Global Active Power", col="red")
dev.copy(png, file="plot1.png")
dev.off()
dev.off()
powerData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
hist(powerData$Global_active_power, xlab="Global Active Power (kilowatts)", main = "Global Active Power", col="red")
colnames(powerData) <- unlist(headers)
headers <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(powerData) <- unlist(headers)
hist(powerData$Global_active_power, xlab="Global Active Power (kilowatts)", main = "Global Active Power", col="red")
dataTime <- strptime(paste(powerData$Date, powerData$Time), "%d/%m/%Y %H:%M:%S")
plot(dataTime, powerData$Global_active_power)
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Global_active_power, show=NO)
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Global_active_power, type="n")
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Global_active_power, type="n", ylab = "Global Active Power (kilowatts)", main = "Global Active Power")
plot(dataTime, powerData$Global_active_power, type="n", ylab = "Global Active Power (kilowatts)")
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Global_active_power, type="n", ylab = "Global Active Power (kilowatts)", main = "Global Active Power" )
lines(dataTime, powerData$Global_active_power)
hist(powerData$Global_active_power, xlab="Global Active Power (kilowatts)", main = "Global Active Power", col="red")
plot(dataTime, powerData$Global_active_power, type="n", ylab = "Global Active Power (kilowatts)", main = "Global Active Power" )
lines(dataTime, powerData$Global_active_power)
dev.copy(png, file="plot2.png")
dev.off()
plot(dataTime, powerData$Global_active_power, type="n", ylab = "Global Active Power (kilowatts)" )
lines(dataTime, powerData$Global_active_power)
dev.copy(png, file="plot2.png")
dev.off()
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
plot(dataTime, powerData$Global_active_power, type="n", xlab = "", ylab = "Global Active Power (kilowatts)" )
source('D:/github/ExData_Plotting1/plot2.R')
source('D:/github/ExData_Plotting1/plot1.R')
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1)
lines(dataTime, powerData$Sub_metering_2)
lines(dataTime, powerData$Sub_metering_3)
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), col=c("black", "red", "blue"))
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
dev.copy(png, file="plot3.png")
dev.off()
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
dev.copy(png, file="plot3.png")
dev.off()
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
dev.copy(png, file="plot3.png")
dev.off()
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
dev.copy(png, file="plot3.png")
dev.off()
par(mfcol=c(2,2), mar=c(4,4,1,1))
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Global_active_power, type="n", xlab = "", ylab = "Global Active Power (kilowatts)" )
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Voltage, type="n", xlab = "datetime", ylab = "Voltage" )
lines(dataTime, powerData$Voltage)
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
plot(dataTime, powerData$Global_reactive_power, type="n", xlab = "datetime", ylab = "Global_reactive_power" )
lines(dataTime, powerData$Global_reactive_power)
# setwd("D:/github/ExData_Plotting1")
powerData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headers <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(powerData) <- unlist(headers)
dataTime <- strptime(paste(powerData$Date, powerData$Time), "%d/%m/%Y %H:%M:%S")
par(mfcol=c(2,2), mar=c(4,4,1,1))
plot(dataTime, powerData$Global_active_power, type="n", xlab = "", ylab = "Global Active Power" )
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), border = FALSE, lty=c(1,1,1), col=c("black", "red", "blue"))
plot(dataTime, powerData$Voltage, type="n", xlab = "datetime", ylab = "Voltage" )
lines(dataTime, powerData$Voltage)
plot(dataTime, powerData$Global_reactive_power, type="n", xlab = "datetime", ylab = "Global_reactive_power" )
lines(dataTime, powerData$Global_reactive_power)
dev.copy(png, file="plot3.png")
dev.off()
# setwd("D:/github/ExData_Plotting1")
powerData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headers <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(powerData) <- unlist(headers)
dataTime <- strptime(paste(powerData$Date, powerData$Time), "%d/%m/%Y %H:%M:%S")
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
dev.copy(png, file="plot3.png")
dev.off()
# setwd("D:/github/ExData_Plotting1")
powerData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headers <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(powerData) <- unlist(headers)
dataTime <- strptime(paste(powerData$Date, powerData$Time), "%d/%m/%Y %H:%M:%S")
par(mfcol=c(1,1))
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), lty=c(1,1,1), col=c("black", "red", "blue"))
dev.copy(png, file="plot3.png")
dev.off()
# setwd("D:/github/ExData_Plotting1")
powerData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headers <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(powerData) <- unlist(headers)
dataTime <- strptime(paste(powerData$Date, powerData$Time), "%d/%m/%Y %H:%M:%S")
par(mfcol=c(2,2), mar=c(4,4,1,1))
plot(dataTime, powerData$Global_active_power, type="n", xlab = "", ylab = "Global Active Power" )
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), border = FALSE, lty=c(1,1,1), col=c("black", "red", "blue"))
plot(dataTime, powerData$Voltage, type="n", xlab = "datetime", ylab = "Voltage" )
lines(dataTime, powerData$Voltage)
plot(dataTime, powerData$Global_reactive_power, type="n", xlab = "datetime", ylab = "Global_reactive_power" )
lines(dataTime, powerData$Global_reactive_power)
dev.copy(png, file="plot4.png")
dev.off()
# setwd("D:/github/ExData_Plotting1")
powerData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headers <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(powerData) <- unlist(headers)
dataTime <- strptime(paste(powerData$Date, powerData$Time), "%d/%m/%Y %H:%M:%S")
par(mfcol=c(2,2), mar=c(4,4,1,1))
plot(dataTime, powerData$Global_active_power, type="n", xlab = "", ylab = "Global Active Power" )
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), border = FALSE, lty=c(1,1,1), col=c("black", "red", "blue"), cex=0.4)
plot(dataTime, powerData$Voltage, type="n", xlab = "datetime", ylab = "Voltage" )
lines(dataTime, powerData$Voltage)
plot(dataTime, powerData$Global_reactive_power, type="n", xlab = "datetime", ylab = "Global_reactive_power" )
lines(dataTime, powerData$Global_reactive_power)
dev.copy(png, file="plot4.png")
dev.off()
plot(dataTime, powerData$Global_reactive_power, type="n", xlab = "datetime", ylab = "Global_reactive_power" )
# setwd("D:/github/ExData_Plotting1")
powerData <- read.table("household_power_consumption.txt", skip=66637, nrows=2880, sep=";")
headers <- read.table("household_power_consumption.txt", skip=0, nrows=1, sep=";", stringsAsFactors = FALSE)
colnames(powerData) <- unlist(headers)
dataTime <- strptime(paste(powerData$Date, powerData$Time), "%d/%m/%Y %H:%M:%S")
par(mfcol=c(2,2), mar=c(4,4,1,1))
plot(dataTime, powerData$Global_active_power, type="n", xlab = "", ylab = "Global Active Power" )
lines(dataTime, powerData$Global_active_power)
plot(dataTime, powerData$Sub_metering_1, type="n", ylab = "Energy sub metering", xlab = "" )
lines(dataTime, powerData$Sub_metering_1, col="black")
lines(dataTime, powerData$Sub_metering_2, col="red")
lines(dataTime, powerData$Sub_metering_3, col="blue")
legend("topright", legend=c("Sub_metering_1","Sub_metering_2","Sub_metering_3"), border = FALSE, lty=c(1,1,1), col=c("black", "red", "blue"), cex=0.7)
plot(dataTime, powerData$Voltage, type="n", xlab = "datetime", ylab = "Voltage" )
lines(dataTime, powerData$Voltage)
plot(dataTime, powerData$Global_reactive_power, type="n", xlab = "datetime", ylab = "Global_reactive_power" )
lines(dataTime, powerData$Global_reactive_power)
dev.copy(png, file="plot4.png")
dev.off()
